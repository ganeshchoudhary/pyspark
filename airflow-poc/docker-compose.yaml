version: "3"
volumes:
  airflow_logs:
  airflow_db:

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "172.16.238.0/24"

x-airflow-common:
  &airflow-common
  image: airflowtest
  volumes:
    - ./dags/:/opt/airflow-poc/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  environment:
    &airflow-common-env
    AIRFLOW_VAR_DATA_WAREHOUSE_PROJECT_BASE_PATH: /opt/airflow-poc/dags
    AIRFLOW_VAR_TMP_FOLDER: /opt/airflow-poc/temp
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: mysql+pymysql://airflow-poc:airflow-poc@172.16.238.3:3306/airflow-poc?charset=utf8mb4&binary_prefix=true
    AWS_DEFAULT_REGION: us-east-1
    ATHENA_AWS_REGION: us-east-1
    ATHENA_WORKGROUP: UAT
    AWS_ACCESS_KEY_ID: AKIA2QF73PNMLGMKA7HJ
    AIRFLOW__SMTP__SMTP_MAIL_FROM: ${LOGNAME}_local_airflow@kaleidofin.com
    AWS_SECRET_ACCESS_KEY: 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
    AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: s3://kaleidofin-ipv-test/airflow_logs/<devname_local>/
    DW_ENV: <devname_local>
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  networks:
    app_net:

  depends_on:
#    - kaleidofin-server-db
    - airflow-poc-db

services:

#  kaleidofin-server-db:
#    image: kaleidofin/kfin:v6.2.0_mysql-8.0-1.1
#    container_name: kaleidofin-server-db
#    restart: unless-stopped
#    environment:
#      - MYSQL_ROOT_PASSWORD=FoR6etM3#
#      - MYSQL_PASSWORD=FoR6etM3#
#    networks:
#      app_net:
#        ipv4_address: 172.16.238.2

  airflow-db:
    image: mysql:8.0.23
    container_name: airflow-poc-db
    restart: unless-stopped
    volumes:
      - airflow_db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=airflow-poc
      - MYSQL_PASSWORD=airflow-poc
      - MYSQL_USER=airflow-poc
      - MYSQL_DATABASE=airflow-poc
      - explicit_defaults_for_timestamp=true
      - local_infile=ON
      - secure-file-priv=""
    networks:
      app_net:
        ipv4_address: 172.16.238.3

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: airflow-poc-webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    container_name: airflow-poc-scheduler
